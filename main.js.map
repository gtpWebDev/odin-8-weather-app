{"version":3,"file":"main.js","mappings":"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","sources":["webpack://odin-weather-app/./src/styles.css","webpack://odin-weather-app/./node_modules/css-loader/dist/runtime/api.js","webpack://odin-weather-app/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://odin-weather-app/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://odin-weather-app/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://odin-weather-app/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://odin-weather-app/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://odin-weather-app/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://odin-weather-app/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://odin-weather-app/webpack/bootstrap","webpack://odin-weather-app/webpack/runtime/compat get default export","webpack://odin-weather-app/webpack/runtime/define property getters","webpack://odin-weather-app/webpack/runtime/global","webpack://odin-weather-app/webpack/runtime/hasOwnProperty shorthand","webpack://odin-weather-app/webpack/runtime/publicPath","webpack://odin-weather-app/webpack/runtime/nonce","webpack://odin-weather-app/./src/styles.css?44b2","webpack://odin-weather-app/./src/weather-locations.js","webpack://odin-weather-app/./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","webpack://odin-weather-app/./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","webpack://odin-weather-app/./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","webpack://odin-weather-app/./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","webpack://odin-weather-app/./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","webpack://odin-weather-app/./node_modules/date-fns/locale/en-US/_lib/localize.mjs","webpack://odin-weather-app/./node_modules/date-fns/locale/_lib/buildMatchFn.mjs","webpack://odin-weather-app/./node_modules/date-fns/locale/en-US/_lib/match.mjs","webpack://odin-weather-app/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","webpack://odin-weather-app/./node_modules/date-fns/locale/en-US.mjs","webpack://odin-weather-app/./node_modules/date-fns/_lib/defaultOptions.mjs","webpack://odin-weather-app/./node_modules/date-fns/constants.mjs","webpack://odin-weather-app/./node_modules/date-fns/toDate.mjs","webpack://odin-weather-app/./node_modules/date-fns/startOfDay.mjs","webpack://odin-weather-app/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","webpack://odin-weather-app/./node_modules/date-fns/constructFrom.mjs","webpack://odin-weather-app/./node_modules/date-fns/getDayOfYear.mjs","webpack://odin-weather-app/./node_modules/date-fns/differenceInCalendarDays.mjs","webpack://odin-weather-app/./node_modules/date-fns/startOfYear.mjs","webpack://odin-weather-app/./node_modules/date-fns/startOfWeek.mjs","webpack://odin-weather-app/./node_modules/date-fns/startOfISOWeek.mjs","webpack://odin-weather-app/./node_modules/date-fns/getISOWeekYear.mjs","webpack://odin-weather-app/./node_modules/date-fns/getISOWeek.mjs","webpack://odin-weather-app/./node_modules/date-fns/startOfISOWeekYear.mjs","webpack://odin-weather-app/./node_modules/date-fns/getWeekYear.mjs","webpack://odin-weather-app/./node_modules/date-fns/getWeek.mjs","webpack://odin-weather-app/./node_modules/date-fns/startOfWeekYear.mjs","webpack://odin-weather-app/./node_modules/date-fns/_lib/addLeadingZeros.mjs","webpack://odin-weather-app/./node_modules/date-fns/_lib/format/lightFormatters.mjs","webpack://odin-weather-app/./node_modules/date-fns/_lib/format/formatters.mjs","webpack://odin-weather-app/./node_modules/date-fns/_lib/format/longFormatters.mjs","webpack://odin-weather-app/./node_modules/date-fns/_lib/protectedTokens.mjs","webpack://odin-weather-app/./node_modules/date-fns/isValid.mjs","webpack://odin-weather-app/./node_modules/date-fns/isDate.mjs","webpack://odin-weather-app/./node_modules/date-fns/format.mjs","webpack://odin-weather-app/./src/weather-forecast.js","webpack://odin-weather-app/./node_modules/date-fns/fromUnixTime.mjs","webpack://odin-weather-app/./src/dom-generation.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\n  --font-hierarchy: Helvetica, Arial, sans-serif, 'Apple Color Emoji',\n    'Segoe UI Emoji', 'Segoe UI Symbol';\n\n  --backGroundColour: #74c3d1;\n  --borderColour: #000000;\n  --lightTextColour: #f8f1e4;\n\n  --lightestColour: rgb(240, 240, 255);\n  --lighterColour: rgb(219, 219, 248);\n  --incompleteTask: rgb(210, 182, 214);\n  --completeTask: rgb(233, 220, 235);\n  --midDarkColour: rgb(90, 197, 160);\n  --darkestColour: #003049;\n\n  --lowPrio: rgb(17, 227, 17);\n  --midPrio: rgb(236, 192, 15);\n  --highPrio: rgb(219, 14, 14);\n\n  /* Main container width max of 80% vw and fixed width, centred */\n  --minContentWidth: 1200px;\n  --bodyWidth: min(var(--minContentWidth), 90vw);\n  --bodyWidthMargin: max(calc(0.5 * (100vw - var(--minContentWidth))), 5vw);\n\n  /* Main container height of 90% vh, centred */\n  --bodyHeight: 90vh;\n  --bodyHeightMargin: calc(0.5 * (100vh - var(--bodyHeight)));\n\n  --weatherDaySquareBoxWidth: 110px;\n\n  --header-scaler: 4rem;\n\n  --location-input-height: 30px; /* applied to drop-down-container */\n  --drop-down-height: calc(1.1 * var(--relative-font-size));\n}\n\nhtml {\n  /* set the rem */\n  font-size: 62.5%;\n}\n\nbody {\n  background-color: var(--backGroundColour);\n  font-family: var(--font-hierarchy);\n  font-size: 2rem;\n}\n\np {\n  margin: 0;\n}\n\n#main-container {\n  background-color: var(--lightestColour);\n  width: var(--bodyWidth);\n  height: var(--bodyHeight);\n  margin: var(--bodyHeightMargin) var(--bodyWidthMargin);\n  display: grid;\n  grid-template-columns: 350px 1fr;\n  /* column-gap: 20px; */\n}\n\n#sidebar-container {\n  padding: 40px 25px;\n  background-color: var(--midDarkColour);\n  box-shadow: 0px 6px 20px var(--midDarkColour);\n  display: grid;\n  grid-template-columns: auto;\n  grid-template-rows: repeat(2, auto);\n  align-content: start;\n  row-gap: 30px;\n}\n\n#page-title-container {\n  display: grid;\n  column-gap: 20px;\n  align-items: center;\n  grid-template-columns: auto 1fr;\n}\n\n#page-title-icon {\n  width: 40px;\n}\n\n#page-title-text {\n  font-size: 3rem;\n  font-weight: 800;\n}\n\n/* used to avoid input styling adjusting when drop down list is visible */\n#location-top-container {\n  position: relative; /* autocomplete list relative to this */\n}\n\n#location-input-container {\n  padding: 0 10px;\n  background-color: var(--lightestColour);\n  border: 2px solid black;\n  display: grid;\n  grid-template-columns: 1fr auto;\n  column-gap: 20px;\n  align-items: center;\n  font-size: var(--location-input-height);\n  /* font-size: 2rem; */\n}\n\n#location-input-text {\n  background-color: var(--lightestColour);\n  border: none;\n  /* font-size: 1rem; */\n}\n\ninput:focus {\n  outline: none;\n}\n\n#location-input-icon {\n  background-color: var(--lightestColour);\n  width: 30px;\n}\n\n#location-drop-down-container {\n  position: relative;\n  cursor: default;\n}\n\n.drop-down-invis {\n  visibility: hidden;\n}\n\n.drop-down-vis {\n  visibility: visible;\n}\n\n.location-drop-down-item {\n  background-color: rgb(16, 140, 97);\n  color: white;\n  position: absolute;\n  width: 300px;\n  height: var(--location-input-height);\n  display: grid;\n  align-items: center;\n  font-size: 14px;\n}\n\n.location-drop-down-item:hover {\n  background-color: rgb(2, 44, 29);\n}\n\n#display-container {\n  padding: 50px;\n  display: grid;\n  justify-content: center;\n  align-content: start;\n  /* grid-template-rows: repeat (2, auto); */\n  /* row-gap: 80px; */\n}\n\n#info-container {\n  box-shadow: 0px 0px 30px var(--midDarkColour);\n}\n\n.vis-true {\n  /* applied to info-container */\n  opacity: 1;\n  transition-property: opacity;\n  transition-timing-function: ease-in;\n  transition-delay: 0.1s;\n  /* transition-duration created in script */\n}\n.vis-false {\n  /* applied to info-container */\n  opacity: 0;\n  transition-property: opacity;\n  transition-timing-function: ease-out;\n  transition-delay: 0.1s;\n  /* transition-duration created in script */\n}\n\n#location-display {\n  padding: 20px;\n  display: grid;\n  place-items: center;\n  font-size: 2.5rem;\n}\n\n#location-name {\n  font-weight: 800;\n}\n\n#location-region {\n  font-size: 2.2rem;\n}\n\n#location-localtime {\n  padding-top: 20px;\n  font-size: 1.5rem;\n}\n\n#weather-display {\n  padding: 10px 30px 30px 30px;\n  display: grid;\n  justify-content: stretch;\n  grid-template-rows: repeat(2, auto);\n  row-gap: 20px;\n  column-gap: 20px;\n  /* border: 2px solid black; */\n  /* box-shadow: 0px 6px 20px var(--midDarkColour); */\n}\n\n#today-weather-display {\n  padding: 10px;\n  grid-row: 1;\n  display: grid;\n  place-items: center;\n  column-gap: 10px;\n  row-gap: 10px;\n  grid-template-rows: auto 1fr;\n  grid-template-columns: auto 1fr;\n  box-shadow: 0px 0px 30px var(--lighterColour);\n}\n\n#today-header {\n  grid-row: 1;\n  grid-column: 1 / 3;\n  display: grid;\n  grid-template-rows: repeat(2, auto);\n  place-items: center;\n}\n\n#today-title {\n  font-size: 2.3rem;\n  font-weight: 800;\n  grid-row: 1;\n}\n\n#today-updated {\n  font-size: 1.5rem;\n  grid-row: 2;\n}\n\n#today-graphic {\n  grid-row: 2;\n  grid-column: 1;\n  display: grid;\n  place-items: center;\n  grid-template-rows: repeat(2, 1fr);\n  grid-template-columns: repeat(2, auto);\n}\n\n#today-image {\n  grid-row: 1 / 3;\n  grid-column: 1;\n  width: 80px;\n}\n\n#today-temp {\n  grid-row: 1;\n  grid-column: 2;\n  font-size: 1.5rem;\n}\n\n#today-wind {\n  grid-row: 2;\n  grid-column: 2;\n  display: grid;\n  place-items: center;\n  grid-template-columns: repeat(2, 1fr);\n}\n\n#today-wind-image {\n  width: 30px;\n}\n\n#today-wind-number {\n  font-size: 1rem;\n}\n\n#today-description {\n  grid-row: 2 / 3;\n  grid-column: 2;\n  /* display: grid; */\n  /* justify-self: start; */\n}\n\n#forecast-weather-display {\n  grid-row: 2;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  column-gap: 20px;\n}\n\n.forecast-day-display {\n  grid-row: 2;\n  padding: 5px;\n  width: var(--weatherDaySquareBoxWidth);\n  height: var(--weatherDaySquareBoxWidth);\n  box-shadow: 0px 0px 30px var(--lighterColour);\n  display: grid;\n  row-gap: 6px;\n  column-gap: 3px;\n  grid-template-rows: auto repeat(2, 1fr);\n  grid-template-columns: repeat(2, auto);\n  place-items: center;\n}\n\n.forecast-date {\n  padding: 5px 0;\n  grid-row: 1;\n  grid-column: 1 / 3;\n}\n\n.forecast-image {\n  grid-row: 2 / 4;\n  grid-column: 1;\n}\n\n.forecast-max-temp {\n  font-size: 1.8rem;\n  grid-row: 2;\n  grid-column: 2;\n  align-self: end;\n  padding-right: 5px;\n}\n\n.forecast-min-temp {\n  font-size: 1.8rem;\n  grid-row: 3;\n  grid-column: 2;\n  align-self: start;\n  padding-right: 5px;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\":root {\\n  --font-hierarchy: Helvetica, Arial, sans-serif, 'Apple Color Emoji',\\n    'Segoe UI Emoji', 'Segoe UI Symbol';\\n\\n  --backGroundColour: #74c3d1;\\n  --borderColour: #000000;\\n  --lightTextColour: #f8f1e4;\\n\\n  --lightestColour: rgb(240, 240, 255);\\n  --lighterColour: rgb(219, 219, 248);\\n  --incompleteTask: rgb(210, 182, 214);\\n  --completeTask: rgb(233, 220, 235);\\n  --midDarkColour: rgb(90, 197, 160);\\n  --darkestColour: #003049;\\n\\n  --lowPrio: rgb(17, 227, 17);\\n  --midPrio: rgb(236, 192, 15);\\n  --highPrio: rgb(219, 14, 14);\\n\\n  /* Main container width max of 80% vw and fixed width, centred */\\n  --minContentWidth: 1200px;\\n  --bodyWidth: min(var(--minContentWidth), 90vw);\\n  --bodyWidthMargin: max(calc(0.5 * (100vw - var(--minContentWidth))), 5vw);\\n\\n  /* Main container height of 90% vh, centred */\\n  --bodyHeight: 90vh;\\n  --bodyHeightMargin: calc(0.5 * (100vh - var(--bodyHeight)));\\n\\n  --weatherDaySquareBoxWidth: 110px;\\n\\n  --header-scaler: 4rem;\\n\\n  --location-input-height: 30px; /* applied to drop-down-container */\\n  --drop-down-height: calc(1.1 * var(--relative-font-size));\\n}\\n\\nhtml {\\n  /* set the rem */\\n  font-size: 62.5%;\\n}\\n\\nbody {\\n  background-color: var(--backGroundColour);\\n  font-family: var(--font-hierarchy);\\n  font-size: 2rem;\\n}\\n\\np {\\n  margin: 0;\\n}\\n\\n#main-container {\\n  background-color: var(--lightestColour);\\n  width: var(--bodyWidth);\\n  height: var(--bodyHeight);\\n  margin: var(--bodyHeightMargin) var(--bodyWidthMargin);\\n  display: grid;\\n  grid-template-columns: 350px 1fr;\\n  /* column-gap: 20px; */\\n}\\n\\n#sidebar-container {\\n  padding: 40px 25px;\\n  background-color: var(--midDarkColour);\\n  box-shadow: 0px 6px 20px var(--midDarkColour);\\n  display: grid;\\n  grid-template-columns: auto;\\n  grid-template-rows: repeat(2, auto);\\n  align-content: start;\\n  row-gap: 30px;\\n}\\n\\n#page-title-container {\\n  display: grid;\\n  column-gap: 20px;\\n  align-items: center;\\n  grid-template-columns: auto 1fr;\\n}\\n\\n#page-title-icon {\\n  width: 40px;\\n}\\n\\n#page-title-text {\\n  font-size: 3rem;\\n  font-weight: 800;\\n}\\n\\n/* used to avoid input styling adjusting when drop down list is visible */\\n#location-top-container {\\n  position: relative; /* autocomplete list relative to this */\\n}\\n\\n#location-input-container {\\n  padding: 0 10px;\\n  background-color: var(--lightestColour);\\n  border: 2px solid black;\\n  display: grid;\\n  grid-template-columns: 1fr auto;\\n  column-gap: 20px;\\n  align-items: center;\\n  font-size: var(--location-input-height);\\n  /* font-size: 2rem; */\\n}\\n\\n#location-input-text {\\n  background-color: var(--lightestColour);\\n  border: none;\\n  /* font-size: 1rem; */\\n}\\n\\ninput:focus {\\n  outline: none;\\n}\\n\\n#location-input-icon {\\n  background-color: var(--lightestColour);\\n  width: 30px;\\n}\\n\\n#location-drop-down-container {\\n  position: relative;\\n  cursor: default;\\n}\\n\\n.drop-down-invis {\\n  visibility: hidden;\\n}\\n\\n.drop-down-vis {\\n  visibility: visible;\\n}\\n\\n.location-drop-down-item {\\n  background-color: rgb(16, 140, 97);\\n  color: white;\\n  position: absolute;\\n  width: 300px;\\n  height: var(--location-input-height);\\n  display: grid;\\n  align-items: center;\\n  font-size: 14px;\\n}\\n\\n.location-drop-down-item:hover {\\n  background-color: rgb(2, 44, 29);\\n}\\n\\n#display-container {\\n  padding: 50px;\\n  display: grid;\\n  justify-content: center;\\n  align-content: start;\\n  /* grid-template-rows: repeat (2, auto); */\\n  /* row-gap: 80px; */\\n}\\n\\n#info-container {\\n  box-shadow: 0px 0px 30px var(--midDarkColour);\\n}\\n\\n.vis-true {\\n  /* applied to info-container */\\n  opacity: 1;\\n  transition-property: opacity;\\n  transition-timing-function: ease-in;\\n  transition-delay: 0.1s;\\n  /* transition-duration created in script */\\n}\\n.vis-false {\\n  /* applied to info-container */\\n  opacity: 0;\\n  transition-property: opacity;\\n  transition-timing-function: ease-out;\\n  transition-delay: 0.1s;\\n  /* transition-duration created in script */\\n}\\n\\n#location-display {\\n  padding: 20px;\\n  display: grid;\\n  place-items: center;\\n  font-size: 2.5rem;\\n}\\n\\n#location-name {\\n  font-weight: 800;\\n}\\n\\n#location-region {\\n  font-size: 2.2rem;\\n}\\n\\n#location-localtime {\\n  padding-top: 20px;\\n  font-size: 1.5rem;\\n}\\n\\n#weather-display {\\n  padding: 10px 30px 30px 30px;\\n  display: grid;\\n  justify-content: stretch;\\n  grid-template-rows: repeat(2, auto);\\n  row-gap: 20px;\\n  column-gap: 20px;\\n  /* border: 2px solid black; */\\n  /* box-shadow: 0px 6px 20px var(--midDarkColour); */\\n}\\n\\n#today-weather-display {\\n  padding: 10px;\\n  grid-row: 1;\\n  display: grid;\\n  place-items: center;\\n  column-gap: 10px;\\n  row-gap: 10px;\\n  grid-template-rows: auto 1fr;\\n  grid-template-columns: auto 1fr;\\n  box-shadow: 0px 0px 30px var(--lighterColour);\\n}\\n\\n#today-header {\\n  grid-row: 1;\\n  grid-column: 1 / 3;\\n  display: grid;\\n  grid-template-rows: repeat(2, auto);\\n  place-items: center;\\n}\\n\\n#today-title {\\n  font-size: 2.3rem;\\n  font-weight: 800;\\n  grid-row: 1;\\n}\\n\\n#today-updated {\\n  font-size: 1.5rem;\\n  grid-row: 2;\\n}\\n\\n#today-graphic {\\n  grid-row: 2;\\n  grid-column: 1;\\n  display: grid;\\n  place-items: center;\\n  grid-template-rows: repeat(2, 1fr);\\n  grid-template-columns: repeat(2, auto);\\n}\\n\\n#today-image {\\n  grid-row: 1 / 3;\\n  grid-column: 1;\\n  width: 80px;\\n}\\n\\n#today-temp {\\n  grid-row: 1;\\n  grid-column: 2;\\n  font-size: 1.5rem;\\n}\\n\\n#today-wind {\\n  grid-row: 2;\\n  grid-column: 2;\\n  display: grid;\\n  place-items: center;\\n  grid-template-columns: repeat(2, 1fr);\\n}\\n\\n#today-wind-image {\\n  width: 30px;\\n}\\n\\n#today-wind-number {\\n  font-size: 1rem;\\n}\\n\\n#today-description {\\n  grid-row: 2 / 3;\\n  grid-column: 2;\\n  /* display: grid; */\\n  /* justify-self: start; */\\n}\\n\\n#forecast-weather-display {\\n  grid-row: 2;\\n  display: grid;\\n  grid-template-columns: repeat(3, 1fr);\\n  column-gap: 20px;\\n}\\n\\n.forecast-day-display {\\n  grid-row: 2;\\n  padding: 5px;\\n  width: var(--weatherDaySquareBoxWidth);\\n  height: var(--weatherDaySquareBoxWidth);\\n  box-shadow: 0px 0px 30px var(--lighterColour);\\n  display: grid;\\n  row-gap: 6px;\\n  column-gap: 3px;\\n  grid-template-rows: auto repeat(2, 1fr);\\n  grid-template-columns: repeat(2, auto);\\n  place-items: center;\\n}\\n\\n.forecast-date {\\n  padding: 5px 0;\\n  grid-row: 1;\\n  grid-column: 1 / 3;\\n}\\n\\n.forecast-image {\\n  grid-row: 2 / 4;\\n  grid-column: 1;\\n}\\n\\n.forecast-max-temp {\\n  font-size: 1.8rem;\\n  grid-row: 2;\\n  grid-column: 2;\\n  align-self: end;\\n  padding-right: 5px;\\n}\\n\\n.forecast-min-temp {\\n  font-size: 1.8rem;\\n  grid-row: 3;\\n  grid-column: 2;\\n  align-self: start;\\n  padding-right: 5px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.nc = undefined;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","// would normally be protected, free API so okay for now\nconst weatherApiKey = '523c922a8fd8443586f100911241603';\n\nlet locationArray = [];\n\nconst locationOptions = () => locationArray;\n\nasync function generateLocationOptions(textInput) {\n  const url = `https://api.weatherapi.com/v1/search.json?key=${weatherApiKey}&q=${textInput}`;\n  const response = await fetch(url, { mode: 'cors' });\n  locationArray = await response.json();\n}\n\nexport { generateLocationOptions, locationOptions };\n\n//_________MAY USE THE BELOW\n\n// nice handle error approach that I may use\n\n// Generic higher level error handler, replaces a function that does not deal with the errors\n// with a function that does, so you don't have to do it every time\n\n// function handleError(fn) {\n//   return function (...params) {\n//     return fn(...params).catch(function (err) {\n//       //error handling\n//       console.error(\"Oops\", err);\n//     });\n//   };\n// }\n\n// ES6 equivalent\n// const handleError =\n//   (fn) =>\n//   (...params) =>\n//     fn(...params).catch(console.error);\n\n// const safeFunction = handleError(unsafeAsyncFunction);\n\n// (async () => {\n//   const response = await safeFunction(url);\n//   console.log(response);\n// })();\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    +startOfDayLeft - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    +startOfDayRight - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { format, fromUnixTime } from 'date-fns';\n\n// would normally be protected, free API so okay for now\nconst weatherApiKey = '523c922a8fd8443586f100911241603';\n\n// variables private to the module\nlet locationData = {};\nlet todayWeatherData = {};\nlet forecastWeatherData = [];\n\nconst getLocationData = () => locationData;\nconst getTodayWeatherData = () => todayWeatherData;\nconst getWeatherForecastData = () => forecastWeatherData;\n\nasync function generateWeatherForecast(location, numDays) {\n  const url = `https://api.weatherapi.com/v1/forecast.json?key=${weatherApiKey}&q=${location}&days=${numDays}`;\n  const response = await fetch(url, { mode: 'cors' });\n  const weatherData = await response.json();\n\n  locationData = createLocationData(weatherData.location);\n  todayWeatherData = createWeatherData(weatherData.current);\n  forecastWeatherData = createForecastWeatherArray(\n    weatherData.forecast.forecastday\n  );\n}\n\nconst createWeatherData = (currData) => {\n  const friendlyLastUpdated = format(currData.last_updated, 'h:mmaaa');\n  return {\n    temp_cent: currData.temp_c,\n    temp_fahr: currData.temp_f,\n    last_updated: friendlyLastUpdated,\n    description: currData.condition.text,\n    imageLoc: currData.condition.icon,\n    rain_mm: currData.precip_mm,\n    rain_inches: currData.precip_in,\n    windSpeed_mph: currData.wind_mph,\n    windSpeed_kph: currData.wind_kph,\n    windDirection: currData.wind_degree,\n  };\n};\n\nconst createLocationData = (locData) => {\n  const friendlyDate = format(locData.localtime, 'MMM do');\n  const friendlyTime = format(locData.localtime, 'h:mmaaa');\n\n  return {\n    name: locData.name,\n    region: locData.region,\n    country: locData.country,\n    localtime_unix: locData.localtime_epoch,\n    localdate_friendly: friendlyDate,\n    localtime_friendly: friendlyTime,\n    // poss add date_fns here for a friendly localtime\n  };\n};\n\nconst createForecastWeatherArray = (forecastArray) => {\n  const simpleArray = [];\n  forecastArray.forEach((ele, index) => {\n    // const newDate = fromUnixTime(ele.date_epoch);\n    const newDate = format(fromUnixTime(ele.date_epoch), 'MMM do');\n\n    simpleArray.push({\n      forecastDayIndex: index + 1,\n      forecastDate_unix: ele.date_epoch,\n      forecastDate_tempDate: newDate,\n      // forecastDate: ele.date,\n      avgTemp_c: ele.day.avgtemp_c,\n      maxTemp_c: ele.day.maxtemp_c,\n      minTemp_c: ele.day.mintemp_c,\n      avgTemp_f: ele.day.avgtemp_f,\n      maxTemp_f: ele.day.maxtemp_f,\n      minTemp_f: ele.day.mintemp_f,\n      description: ele.day.condition.text,\n      imageLoc: ele.day.condition.icon,\n    });\n  });\n  return simpleArray;\n};\n\nexport {\n  generateWeatherForecast,\n  getLocationData,\n  getTodayWeatherData,\n  getWeatherForecastData,\n};\n\n//_________MAY USE THE BELOW\n\n// nice handle error approach that I may use\n\n// Generic higher level error handler, replaces a function that does not deal with the errors\n// with a function that does, so you don't have to do it every time\n\n// function handleError(fn) {\n//   return function (...params) {\n//     return fn(...params).catch(function (err) {\n//       //error handling\n//       console.error(\"Oops\", err);\n//     });\n//   };\n// }\n\n// ES6 equivalent\n// const handleError =\n//   (fn) =>\n//   (...params) =>\n//     fn(...params).catch(console.error);\n\n// const safeFunction = handleError(unsafeAsyncFunction);\n\n// (async () => {\n//   const response = await safeFunction(url);\n//   console.log(response);\n// })();\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp (in seconds). Decimal values will be discarded.\n *\n * @param unixTime - The given Unix timestamp (in seconds)\n *\n * @returns The date\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * const result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\nexport function fromUnixTime(unixTime) {\n  return toDate(unixTime * 1000);\n}\n\n// Fallback for modularized imports:\nexport default fromUnixTime;\n","import './styles.css';\n\nimport {\n  generateLocationOptions,\n  locationOptions,\n} from './weather-locations.js';\nimport {\n  generateWeatherForecast,\n  getLocationData,\n  getTodayWeatherData,\n  getWeatherForecastData,\n} from './weather-forecast.js';\n\nimport sunIcon from './weather-sunny.svg';\nimport cloudSearchIcon from './cloud-search.svg';\nimport upArrow from './arrow-up-circle-outline.svg';\n\nconst degreeSymbol = '\\u00B0';\n\n// import images for recognition by webpack\nfunction attachImages() {\n  const titleIcon = document.querySelector('#page-title-icon');\n  titleIcon.setAttribute('src', sunIcon);\n  const locationSearchIcon = document.querySelector('#location-input-icon');\n  locationSearchIcon.setAttribute('src', cloudSearchIcon);\n}\n\n// Location input text - get location options from weather API and display them\nconst locationInput = document.querySelector('#location-input-text');\nfunction addLocInputListener() {\n  locationInput.addEventListener('input', async (event) => {\n    const currentInput = event.target.value;\n    if (currentInput.length >= 3) {\n      await generateLocationOptions(currentInput);\n    }\n    refreshLocationList(locationOptions());\n  });\n}\n\n// dynamically update location options on each update of input text\nconst locDropdown = document.querySelector('#location-drop-down-container');\nfunction refreshLocationList(optionArray) {\n  locDropdown.innerHTML = '';\n  if (optionArray.length === 0) {\n    locDropdown.setAttribute('class', 'drop-down-invis');\n  } else {\n    optionArray.forEach((element, index) => {\n      const option = document.createElement('div');\n      option.setAttribute('class', 'location-drop-down-item');\n      option.setAttribute(\n        'style',\n        `top: calc(${index}*var(--location-input-height));`\n      );\n      const preciseLocation = element.name + ', ' + element.region;\n      option.setAttribute('value', preciseLocation);\n      option.textContent = preciseLocation;\n      option.addEventListener('click', async () => {\n        locationInput.value = ''; // not having any effect?\n        locDropdown.setAttribute('class', 'drop-down-invis');\n        // some extra effort to make nice fade in and out effect\n        const transitionTimeInMs = 800;\n        const additionalDataDelayInMs = 500;\n        fadeVisibility(false, transitionTimeInMs);\n        setTimeout(async () => {\n          await generateWeatherForecast(preciseLocation, 3);\n          drawLocationArea(getLocationData());\n          drawTodayWeatherArea(getTodayWeatherData());\n          drawForecastWeatherArea(getWeatherForecastData());\n          fadeVisibility(true, 2 * transitionTimeInMs);\n        }, transitionTimeInMs + additionalDataDelayInMs);\n      });\n      locDropdown.appendChild(option);\n    });\n    locDropdown.setAttribute('class', 'drop-down-vis');\n  }\n}\n\n// fade main info container in and out\nfunction fadeVisibility(visState, transitionTimeInMs) {\n  const transitionTimeInSecs = (transitionTimeInMs / 1000).toFixed(3);\n  const infoContainer = document.querySelector('#info-container');\n  infoContainer.setAttribute(\n    'style',\n    `transition-duration: ${transitionTimeInSecs}s`\n  );\n  if (visState) {\n    infoContainer.setAttribute('class', 'vis-true');\n  } else {\n    infoContainer.setAttribute('class', 'vis-false');\n  }\n}\n\nfunction drawLocationArea(locData) {\n  const locationName = document.querySelector('#location-name');\n  locationName.textContent = locData.name + ', ' + locData.region;\n  const locationRegion = document.querySelector('#location-region');\n  locationRegion.textContent = locData.country;\n  const locationTimestamp = document.querySelector('#location-localtime');\n  locationTimestamp.textContent =\n    'Local time: ' +\n    locData.localtime_friendly +\n    ', ' +\n    locData.localdate_friendly;\n}\n\nfunction drawTodayWeatherArea(todayData) {\n  const todayUpdated = document.querySelector('#today-updated');\n  todayUpdated.textContent = 'Last updated: ' + todayData.last_updated;\n\n  const todayWindImage = document.querySelector('#today-wind-image');\n  todayWindImage.setAttribute('src', upArrow);\n  todayWindImage.setAttribute(\n    'style',\n    `rotate: ${180 + todayData.windDirection}deg`\n  );\n\n  const todayWindNumber = document.querySelector('#today-wind-number');\n  todayWindNumber.textContent = todayData.windSpeed_mph + 'mph';\n\n  const todayImage = document.querySelector('#today-image');\n  todayImage.setAttribute('src', todayData.imageLoc);\n\n  const todayDesc = document.querySelector('#today-description');\n  todayDesc.textContent = todayData.description;\n\n  const todayWeather = document.querySelector('#today-temp');\n  todayWeather.textContent =\n    todayData.temp_cent.toFixed(0) + degreeSymbol + 'C';\n}\n\nfunction drawForecastWeatherArea(forecastData) {\n  const container = document.querySelector('#forecast-weather-display');\n\n  const domString = forecastData\n    .map((element) => {\n      return `\n        <div class=\"forecast-day-display\">\n          <p class=\"forecast-date\">${element.forecastDate_tempDate}</p>\n          <img src=\"${element.imageLoc}\" class=\"forecast-image\" />\n          <p class=\"forecast-max-temp\">${element.maxTemp_c.toFixed(0) + degreeSymbol + 'C'}</p>\n          <p class=\"forecast-min-temp\">${element.minTemp_c.toFixed(0) + degreeSymbol + 'C'}</p>\n        </div>\n        `;\n    })\n    .join('');\n\n  container.innerHTML = domString;\n}\n\nexport { attachImages, addLocInputListener };\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","src","scripts","getElementsByTagName","test","replace","p","nc","locals","locationArray","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","width","String","defaultWidth","formats","formatLong","date","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","value","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","localize","ordinalNumber","dirtyNumber","_options","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","Array","isArray","array","predicate","findIndex","object","findKey","valueCallback","rest","slice","parsePattern","parseInt","parseResult","any","enUS","code","formatDistance","token","tokenValue","addSuffix","comparison","formatRelative","_date","_baseDate","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","millisecondsInDay","toDate","argument","argStr","Date","constructor","NaN","startOfDay","setHours","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","constructFrom","getDayOfYear","dateLeft","dateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","differenceInCalendarDays","cleanDate","setFullYear","startOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","dayPeriodEnumValue","toUpperCase","h","H","m","s","S","numberOfDigits","milliseconds","trunc","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","toLowerCase","b","hours","B","K","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","pattern","timeLongFormatter","longFormatters","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","format","formatStr","originalDate","RangeError","parts","substring","firstCharacter","longFormatter","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","input","_message","subject","message","console","warn","includes","warnOrThrowProtectedError","formatter","matched","locationData","todayWeatherData","forecastWeatherData","createForecastWeatherArray","forecastArray","simpleArray","forEach","ele","newDate","date_epoch","forecastDayIndex","forecastDate_unix","forecastDate_tempDate","avgTemp_c","avgtemp_c","maxTemp_c","maxtemp_c","minTemp_c","mintemp_c","avgTemp_f","avgtemp_f","maxTemp_f","maxtemp_f","minTemp_f","mintemp_f","description","condition","text","imageLoc","icon","locationInput","locDropdown","fadeVisibility","visState","transitionTimeInMs","transitionTimeInSecs","toFixed","infoContainer","sunIcon","cloudSearchIcon","addEventListener","async","currentInput","event","optionArray","textInput","url","response","fetch","mode","json","generateLocationOptions","innerHTML","option","preciseLocation","name","region","textContent","setTimeout","locData","numDays","weatherData","friendlyDate","localtime","friendlyTime","country","localtime_unix","localtime_epoch","localdate_friendly","localtime_friendly","createLocationData","currData","friendlyLastUpdated","last_updated","temp_cent","temp_c","temp_fahr","temp_f","rain_mm","precip_mm","rain_inches","precip_in","windSpeed_mph","wind_mph","windSpeed_kph","wind_kph","windDirection","wind_degree","createWeatherData","current","forecast","forecastday","generateWeatherForecast","todayData","todayWindImage","upArrow","drawTodayWeatherArea","forecastData","container","domString","drawForecastWeatherArea"],"sourceRoot":""}